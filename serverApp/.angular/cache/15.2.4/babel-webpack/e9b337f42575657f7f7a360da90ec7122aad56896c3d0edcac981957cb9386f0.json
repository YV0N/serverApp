{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-notifier\";\nexport class NotificationService {\n  constructor(notifierService) {\n    this.notifier = notifierService;\n  }\n  onDefault(message) {\n    this.notifier.notify(Type.DEFAULT, message);\n  }\n  onSuccess(message) {\n    this.notifier.notify(Type.SUCCESS, message);\n  }\n  onInfo(message) {\n    this.notifier.notify(Type.INFO, message);\n  }\n  onWarning(message) {\n    this.notifier.notify(Type.WARNING, message);\n  }\n  onError(message) {\n    this.notifier.notify(Type.ERROR, message);\n  }\n}\nNotificationService.ɵfac = function NotificationService_Factory(t) {\n  return new (t || NotificationService)(i0.ɵɵinject(i1.NotifierService));\n};\nNotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotificationService,\n  factory: NotificationService.ɵfac,\n  providedIn: 'root'\n});\nvar Type;\n(function (Type) {\n  Type[\"DEFAULT\"] = \"default\";\n  Type[\"INFO\"] = \"info\";\n  Type[\"SUCCESS\"] = \"success\";\n  Type[\"WARNING\"] = \"warning\";\n  Type[\"ERROR\"] = \"error\";\n})(Type || (Type = {}));","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAYC,eAAgC;IAC1C,IAAI,CAACC,QAAQ,GAAGD,eAAe;EACjC;EAEAE,SAASA,CAACC,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,EAAEH,OAAO,CAAC;EAC7C;EAEAI,SAASA,CAACJ,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACG,OAAO,EAAEL,OAAO,CAAC;EAC7C;EAEAM,MAAMA,CAACN,OAAe;IACpB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACK,IAAI,EAAEP,OAAO,CAAC;EAC1C;EAEAQ,SAASA,CAACR,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACO,OAAO,EAAET,OAAO,CAAC;EAC7C;EAEAU,OAAOA,CAACV,OAAe;IACrB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACS,KAAK,EAAEX,OAAO,CAAC;EAC3C;;AAzBWL,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAiB,SAAnBjB,mBAAmB;EAAAkB,YAFlB;AAAM;AA8BpB,IAAKX,IAMJ;AAND,WAAKA,IAAI;EACPA,2BAAmB;EACnBA,qBAAa;EACbA,2BAAmB;EACnBA,2BAAmB;EACnBA,uBAAe;AACjB,CAAC,EANIA,IAAI,KAAJA,IAAI","names":["NotificationService","constructor","notifierService","notifier","onDefault","message","notify","Type","DEFAULT","onSuccess","SUCCESS","onInfo","INFO","onWarning","WARNING","onError","ERROR","factory","providedIn"],"sourceRoot":"","sources":["/Users/william/Desktop/prog/youtube/amigosCode/serverProject/serverApp/src/app/service/notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  private readonly notifier: NotifierService;\n\n  constructor(notifierService: NotifierService) {\n    this.notifier = notifierService;\n  }\n\n  onDefault(message: string): void {\n    this.notifier.notify(Type.DEFAULT, message);\n  }\n\n  onSuccess(message: string): void {\n    this.notifier.notify(Type.SUCCESS, message);\n  }\n\n  onInfo(message: string): void {\n    this.notifier.notify(Type.INFO, message);\n  }\n\n  onWarning(message: string): void {\n    this.notifier.notify(Type.WARNING, message);\n  }\n\n  onError(message: string): void {\n    this.notifier.notify(Type.ERROR, message);\n  }\n}\n\nenum Type {\n  DEFAULT = 'default',\n  INFO = 'info',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}