{"ast":null,"code":"import { catchError, map, Observable, of, startWith } from 'rxjs';\nimport { DataState } from './enum/data.state.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/server.service\";\nimport * as i2 from \"@angular/common\";\nexport class AppComponent {\n  constructor(serverService) {\n    this.serverService = serverService;\n    this.appState$ = new Observable();\n  }\n  ngOnInit() {\n    this.appState$ = this.serverService.servers$.pipe(map(response => {\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE\n    }), catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error: error\n      });\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ServerService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 5,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"json\");\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, i0.ɵɵpipeBind1(3, 3, ctx.appState$)));\n    }\n  },\n  dependencies: [i2.AsyncPipe, i2.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAEC,GAAG,EAAEC,UAAU,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAGjE,SAASC,SAAS,QAAQ,wBAAwB;;;;AAOlD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAHjC,cAAS,GAAyC,IAAIN,UAAU,EAE7D;EACgD;EAEnDO,QAAQA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,aAAa,CAACG,QAAQ,CAACC,IAAI,CAC/CX,GAAG,CAAEY,QAAQ,IAAI;MACf,OAAO;QAAEC,SAAS,EAAET,SAAS,CAACU,YAAY;QAAEC,OAAO,EAAEH;MAAQ,CAAE;IACjE,CAAC,CAAC,EACFT,SAAS,CAAC;MAAEU,SAAS,EAAET,SAAS,CAACY;IAAa,CAAE,CAAC,EACjDjB,UAAU,CAAEkB,KAAa,IAAI;MAC3B,OAAOf,EAAE,CAAC;QAAEW,SAAS,EAAET,SAAS,CAACc,WAAW;QAAED,KAAK,EAAEA;MAAK,CAAE,CAAC;IAC/D,CAAC,CAAC,CACH;EACH;;AAhBWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCZzBC,2BAAK;MAAAA,YAA8B;;;MAAAA,iBAAM;;;MAApCA,eAA8B;MAA9BA,+EAA8B","names":["catchError","map","Observable","of","startWith","DataState","AppComponent","constructor","serverService","ngOnInit","appState$","servers$","pipe","response","dataState","LOADED_STATE","appData","LOADING_STATE","error","ERROR_STATE","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/william/Desktop/prog/youtube/amigosCode/serverProject/serverApp/src/app/app.component.ts","/Users/william/Desktop/prog/youtube/amigosCode/serverProject/serverApp/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ServerService } from './service/server.service';\nimport { catchError, map, Observable, of, startWith } from 'rxjs';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { DataState } from './enum/data.state.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  appState$: Observable<AppState<CustomResponse>> = new Observable<\n    AppState<CustomResponse>\n  >();\n  constructor(private serverService: ServerService) {}\n\n  ngOnInit(): void {\n    this.appState$ = this.serverService.servers$.pipe(\n      map((response) => {\n        return { dataState: DataState.LOADED_STATE, appData: response };\n      }),\n      startWith({ dataState: DataState.LOADING_STATE }),\n      catchError((error: string) => {\n        return of({ dataState: DataState.ERROR_STATE, error: error });\n      })\n    );\n  }\n}\n","<div>{{ appState$ | async | json }}</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}