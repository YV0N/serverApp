{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { catchError, map, Observable, of, startWith } from 'rxjs';\nimport { DataState } from './enum/data.state.enum';\nimport { Status } from './enum/status.enum';\nlet AppComponent = class AppComponent {\n  constructor(serverService) {\n    this.serverService = serverService;\n    this.appState$ = new Observable();\n    this.DataState = DataState;\n    this.Status = Status;\n  }\n  ngOnInit() {\n    this.appState$ = this.serverService.servers$.pipe(map(response => {\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE\n    }), catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error: error\n      });\n    }));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,UAAU,EAAEC,GAAG,EAAEC,UAAU,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAGjE,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,MAAM,QAAQ,oBAAoB;AAOpC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IANjC,cAAS,GAAyC,IAAIP,UAAU,EAE7D;IACM,cAAS,GAAGG,SAAS;IACrB,WAAM,GAAGC,MAAM;EAE2B;EAEnDI,QAAQA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,aAAa,CAACG,QAAQ,CAACC,IAAI,CAC/CZ,GAAG,CAAEa,QAAQ,IAAI;MACf,OAAO;QAAEC,SAAS,EAAEV,SAAS,CAACW,YAAY;QAAEC,OAAO,EAAEH;MAAQ,CAAE;IACjE,CAAC,CAAC,EACFV,SAAS,CAAC;MAAEW,SAAS,EAAEV,SAAS,CAACa;IAAa,CAAE,CAAC,EACjDlB,UAAU,CAAEmB,KAAa,IAAI;MAC3B,OAAOhB,EAAE,CAAC;QAAEY,SAAS,EAAEV,SAAS,CAACe,WAAW;QAAED,KAAK,EAAEA;MAAK,CAAE,CAAC;IAC/D,CAAC,CAAC,CACH;EACH;CACD;AApBYZ,YAAY,eALxBR,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWhB,YAAY,CAoBxB;SApBYA,YAAY","names":["Component","catchError","map","Observable","of","startWith","DataState","Status","AppComponent","constructor","serverService","ngOnInit","appState$","servers$","pipe","response","dataState","LOADED_STATE","appData","LOADING_STATE","error","ERROR_STATE","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/william/Desktop/prog/youtube/amigosCode/serverProject/serverApp/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ServerService } from './service/server.service';\nimport { catchError, map, Observable, of, startWith } from 'rxjs';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { DataState } from './enum/data.state.enum';\nimport { Status } from './enum/status.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  appState$: Observable<AppState<CustomResponse>> = new Observable<\n    AppState<CustomResponse>\n  >();\n  readonly DataState = DataState;\n  readonly Status = Status;\n\n  constructor(private serverService: ServerService) {}\n\n  ngOnInit(): void {\n    this.appState$ = this.serverService.servers$.pipe(\n      map((response) => {\n        return { dataState: DataState.LOADED_STATE, appData: response };\n      }),\n      startWith({ dataState: DataState.LOADING_STATE }),\n      catchError((error: string) => {\n        return of({ dataState: DataState.ERROR_STATE, error: error });\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}